# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
import numpy as np

def fibonacci_seq(highest_value):
    numbers = [1,2]
    while True:
        next_value = numbers[-1] + numbers[-2]
        if next_value < highest_value:
            numbers.append(next_value)
        else:
            return numbers
            break

seq_to_4mil = fibonacci_seq(4000000)

def get_sum_of_evens(list_values):
    evens = []
    for i in list_values:
        if i%2 == 0:
            evens.append(i)
    return(sum(evens))

print(get_sum_of_evens(seq_to_4mil))

# answer is correct